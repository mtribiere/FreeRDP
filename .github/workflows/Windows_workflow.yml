name: FreeRDP Test Build

on:
  push:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
    
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: "Install cross-compilation toolchain"
      #run: sudo apt update && sudo apt --reinstall install mingw-w64 libgtk-3-dev libwebkit2gtk-4.0-dev build-essential ninja-build cmake zlib1g-dev libssl-dev libcairo2-dev libfreetype6 libfreetype6-dev libfreetype-dev libfontconfig1-dev xclip
      run: sudo apt update && sudo apt install mingw-w64 ninja-build build-essential git-core debhelper cdbs dpkg-dev autotools-dev cmake pkg-config xmlto libssl-dev docbook-xsl xsltproc libxkbfile-dev libx11-dev libwayland-dev libxrandr-dev libxi-dev libxrender-dev libxext-dev libxinerama-dev libxfixes-dev libxcursor-dev libxv-dev libxdamage-dev libxtst-dev libcups2-dev libpcsclite-dev libasound2-dev libpulse-dev libjpeg-dev libgsm1-dev libusb-1.0-0-dev libudev-dev libdbus-glib-1-dev uuid-dev libxml2-dev libfaad-dev libfaac-dev libcjson-dev libpkcs11-helper1-dev

    - name: Cross compile zLIB 
      run: |
        cd ..
        git clone -b master https://github.com/madler/zlib
        cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/mingw_toolchain.cmake -B zlib-build -S zlib -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/x86_64-w64-mingw32
        sudo cmake --build zlib-build --target install
      
    - name: Cross compile OpenSSL 
      run: |
        cd ..
        git clone -b openssl-3.1.1 https://github.com/openssl/openssl.git
        cd openssl
        ./Configure mingw64 --cross-compile-prefix=x86_64-w64-mingw32- --prefix=/usr/x86_64-w64-mingw32
        make -j build_sw
        sudo make -j install_sw 
    
    - name: Cross compile cJSON 
      run: |
        cd ..
        git clone --depth 1 -b v1.7.16 https://github.com/DaveGamble/cJSON.git
        cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/mingw_toolchain.cmake -B cJSON-build -S cJSON -DCMAKE_BUILD_TYPE=Release -DENABLE_CJSON_TEST=OFF -DBUILD_SHARED_AND_STATIC_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr/x86_64-w64-mingw32
        sudo cmake --build cJSON-build --target install
    
    - name: "Cross Compile SDL"
      run: |
        cd ..
        git clone --depth 1 -b release-2.28.1 https://github.com/libsdl-org/SDL.git
        cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/mingw_toolchain.cmake -B SDL-build -S SDL -DCMAKE_BUILD_TYPE=Release -DSDL_TEST=OFF -DSDL_TESTS=OFF -DSDL_STATIC_PIC=ON -DCMAKE_INSTALL_PREFIX=/usr/x86_64-w64-mingw32
        sudo cmake --build SDL-build --target install
        
    - name: "Cross Compile SDL_TTF"
      run: |
        cd ..
        git clone --depth 1 --shallow-submodules --recurse-submodules -b release-2.20.2 https://github.com/libsdl-org/SDL_ttf.git
        cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/mingw_toolchain.cmake -B SDL_ttf-build -S SDL_ttf -DCMAKE_BUILD_TYPE=Release -DSDL2TTF_HARFBUZZ=ON -DSDL2TTF_FREETYPE=ON -DSDL2TTF_VENDORED=ON -DFT_DISABLE_ZLIB=OFF -DSDL2TTF_SAMPLES=OFF -DCMAKE_INSTALL_PREFIX=/usr/x86_64-w64-mingw32
        sudo cmake --build SDL_ttf-build --target install
        
    - name: "Debug LS 2"
      run: |
        ls
        echo "--"
        ls ..
        echo "--"
        ls /usr/x86_64-w64-mingw32
        echo "--"
        ls /usr/x86_64-w64-mingw32/lib
        echo "--"
        ls /usr/x86_64-w64-mingw32/lib64
            
    - name: "Cross Compile FreeRDP"
      run: |
        cd ..
        cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/mingw_toolchain.cmake -B freerdp-build -S ${{ github.workspace }} -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/x86_64-w64-mingw32 -DWITH_SERVER=ON -DWITH_SAMPLE=ON -DWITH_PLATFORM_SERVER=OFF -DUSE_UNWIND=OFF -DCHANNEL_URBDRC=OFF -DBUILD_SHARED_LIBS=OFF
        sudo cmake --build freerdp-build --target install
